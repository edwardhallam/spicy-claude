name: Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: spicy-claude-linux-x64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: spicy-claude-linux-arm64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: spicy-claude-macos-x64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: spicy-claude-macos-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        run: npm ci
        working-directory: frontend

      - name: Build frontend
        run: npm run build
        working-directory: frontend

      - name: Copy frontend assets
        run: node scripts/copy-frontend.js
        working-directory: backend

      - name: Generate version.ts
        run: node scripts/generate-version.js
        working-directory: backend

      - name: Setup Deno
        uses: denoland/setup-deno@e95548e56dfa95d4e1a28d6f422fafe75c4c26fb # v2.0.3
        with:
          deno-version: v2.x

      - name: Install and cache Deno dependencies
        run: deno install && deno cache cli/deno.ts
        working-directory: backend

      - name: Build backend binary
        run: deno compile --allow-net --allow-run --allow-read --allow-write --allow-env --allow-sys --include ./dist/static --target ${{ matrix.target }} --output ../dist/${{ matrix.artifact_name }} cli/deno.ts
        working-directory: backend

      - name: Upload artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ matrix.artifact_name }}
          path: dist/${{ matrix.artifact_name }}*

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate version tag
        id: version
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          VERSION="v1.0.0-${SHORT_SHA}"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "short_sha=${SHORT_SHA}" >> $GITHUB_OUTPUT

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: Release ${{ steps.version.outputs.version }}
          body: |
            ## Spicy Claude Release

            **Version**: ${{ steps.version.outputs.version }}
            **Commit**: ${{ steps.version.outputs.short_sha }}

            ### Download Binaries

            - **Linux x64**: `spicy-claude-linux-x64`
            - **Linux ARM64**: `spicy-claude-linux-arm64`
            - **macOS x64**: `spicy-claude-macos-x64`
            - **macOS ARM64**: `spicy-claude-macos-arm64`

            ### Installation

            1. Download the binary for your platform
            2. Make it executable: `chmod +x spicy-claude-*`
            3. Run: `./spicy-claude-*`

            For detailed installation instructions, see [DEPLOYMENT.md](https://github.com/edwardhallam/spicy-claude/blob/main/docs/DEPLOYMENT.md)
          files: |
            artifacts/*/*
          draft: false
          prerelease: false
          generate_release_notes: true
